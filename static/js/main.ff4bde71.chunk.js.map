{"version":3,"sources":["components/Filter/Filter.module.scss","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/Title/Title.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","Filter","value","onChange","inputListId","nanoid","className","s","label","htmlFor","input","id","ContactForm","nameInputId","phoneInpudId","state","name","number","handleName","e","setState","target","handleNumber","handleSubmit","preventDefault","props","coincidence","toLowerCase","onSubmit","form","autoComplete","this","pattern","title","required","debounceTimeout","type","button","Component","Title","children","ContactList","contacts","deleteContact","list","map","item","onClick","App","filter","addContact","contact","currentTarget","prevState","n","changeFilter","getVisibleContacts","normalizedFilter","includes","handleCoincidence","currentName","find","alert","filterContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff4bde71.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1ZWTa\",\"input\":\"Filter_input__3OzGX\"};","import { nanoid } from 'nanoid';\n\nimport s from './Filter.module.scss';\n\nfunction Filter({ value, onChange }) {\n  const inputListId = nanoid();\n  return (\n    <>\n      <label className={s.label} htmlFor={inputListId}>\n        Find contacts by name\n      </label>\n      <input\n        className={s.input}\n        id={inputListId}\n        value={value}\n        onChange={onChange}\n      />\n    </>\n  );\n}\n\nexport default Filter;\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { DebounceInput } from 'react-debounce-input';\nimport s from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  nameInputId = nanoid();\n  phoneInpudId = nanoid();\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleName = e => {\n    this.setState({\n      name: e.target.value,\n    });\n    // this.setState({\n    //   name: e.currentTarget.value,\n    // });\n  };\n\n  handleNumber = e => {\n    this.setState({\n      number: e.target.value,\n    });\n    // this.setState({\n    //   number: e.currentTarget.value,\n    // });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.props.coincidence(this.state.name.toLowerCase())) return;\n\n    this.props.onSubmit(this.state.name, this.state.number);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <>\n        <form\n          className={s.form}\n          autoComplete=\"off\"\n          onSubmit={this.handleSubmit}\n        >\n          <div>\n            <label className={s.label} htmlFor={this.nameInputId}>\n              Name\n            </label>\n            <DebounceInput\n              className={s.input}\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              id={this.nameInputId}\n              value={this.state.name}\n              debounceTimeout={300}\n              onChange={this.handleName}\n            />\n\n            {/* <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              id={this.nameInputId}\n              onChange={this.handleName}\n              value={this.state.name}\n            /> */}\n\n            <label className={s.label} htmlFor={this.phoneInpudId}>\n              Number\n            </label>\n            <DebounceInput\n              className={s.input}\n              type=\"tel\"\n              id={this.phoneInpudId}\n              value={this.state.number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              debounceTimeout={300}\n              onChange={this.handleNumber}\n            />\n            {/* <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              id={this.phoneInpudId}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.handleNumber}\n              value={this.state.number}\n            /> */}\n\n            <button className={s.button} type=\"submit\">\n              Add contact\n            </button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","function Title({ children }) {\n  return (\n    <>\n      <h1>{children}</h1>\n    </>\n  );\n}\n\nexport default Title;\n","import s from '././ContactList.module.scss';\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li className={s.item} key={id}>\n            <span>{name}</span>: <span>{number}</span>\n            <button\n              className={s.button}\n              type=\"button\"\n              id={id}\n              onClick={deleteContact}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport Filter from 'components/Filter/Filter';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Title from './components/Title/Title';\nimport ContactList from 'components/ContactList/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    // name: '',\n    // number: '',\n  };\n\n  addContact = (name, number) => {\n    const contact = { id: nanoid(), name, number };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = e => {\n    const id = e.currentTarget.id;\n\n    this.setState(prevState => {\n      return { contacts: prevState.contacts.filter(n => n.id !== id) };\n    });\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  handleCoincidence = currentName => {\n    if (\n      this.state.contacts.find(({ name }) => name.toLowerCase() === currentName)\n    ) {\n      alert(`${currentName} is alredy in contacts`);\n      return true;\n    }\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filterContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <Title>Phonebook</Title>\n        <ContactForm\n          onSubmit={this.addContact}\n          coincidence={this.handleCoincidence}\n        />\n        <Title>Contacts</Title>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filterContacts}\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2HDsq\",\"button\":\"ContactForm_button__2LI89\",\"label\":\"ContactForm_label__3uBus\",\"input\":\"ContactForm_input__3dS5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2MEHH\",\"item\":\"ContactList_item__2zHgk\",\"button\":\"ContactList_button__3Wk-o\"};"],"sourceRoot":""}